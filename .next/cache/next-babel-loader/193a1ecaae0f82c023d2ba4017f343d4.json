{"ast":null,"code":"var _jsxFileName = \"/home/jorge-n/Documentos/workspace-react/saco_de_vacilos/frontend/src/pages/Register/index.tsx\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, Input } from \"@chakra-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport Toast from \"./../../components/Toast\"; // import logo from \"./../assets/image/logo.png\";\n\nconst Register = ({}) => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  useEffect(() => {\n    document.title = \"Login\";\n  }, []);\n\n  async function handleSubmit(event) {\n    event.preventDefault(); //Verificar se todos o campos estão preenchidos antes da primeira requisição.\n\n    if (!username || !password) {\n      Toast(\"Que vacilo! Você não preencheu todos os campos.\", \"warning\");\n      return false;\n    } //Bloquear o botão de login para evitar requisições desnecessárias.\n\n\n    let btn_login = document.getElementById(\"btn_login\");\n    btn_login.setAttribute(\"disabled\", \"disabled\");\n    btn_login.classList.add(\"waiting\"); //Tentar realizar a requisição.\n\n    try {\n      const response = await api.post(\"/users/login\", {\n        username,\n        password\n      });\n      const {\n        data\n      } = response;\n      console.log(data);\n      data.login_date = new Date();\n      dispatch(UserActions.login(JSON.stringify(data))); //TODO, método de redirecionamento vannila não fica legal :(\n\n      window.location = \"/Dashboard\";\n    } catch (error) {\n      Toast(\"Vacilou na senha ou usuario, verifique se suas credenciais estão corretas..\", \"warning\");\n      btn_login.classList.remove(\"waiting\");\n      btn_login.removeAttribute(\"disabled\");\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"login-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"login-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"login-background-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"app-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"text-intro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Rede social apenas para os vacil\\xF5es.\"), __jsx(\"h2\", {\n    style: {\n      fontWeight: \"lighter\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Se voc\\xEA nunca vacilou, nem crie uma conta.\", \" \", __jsx(\"span\", {\n    className: \"text-tiny\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Mas sabemos que j\\xE1 :)\"))), __jsx(\"div\", {\n    className: \"logo-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"login-welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"login-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Registrar\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Favor inserir seus dados de registro.\")), __jsx(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      email: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, (values, handleChange) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Nome de Usu\\xE1rio\"), __jsx(Input, {\n    value: values.username,\n    onChange: handleChange,\n    id: \"username\",\n    placeholder: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/jorge-n/Documentos/workspace-react/saco_de_vacilos/frontend/src/pages/Register/index.tsx"],"names":["FormControl","FormLabel","Input","React","useEffect","useState","Form","Formik","Toast","Register","username","setUsername","password","setPassword","document","title","handleSubmit","event","preventDefault","btn_login","getElementById","setAttribute","classList","add","response","api","post","data","console","log","login_date","Date","dispatch","UserActions","login","JSON","stringify","window","location","error","remove","removeAttribute","fontWeight","email","values","handleChange"],"mappings":";;AAAA,SAEEA,WAFF,EAIEC,SAJF,EAKEC,KALF,QAMO,iBANP;AAOA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AAEA,OAAOC,KAAP,MAAkB,0BAAlB,C,CAEA;;AAIA,MAAMC,QAAiC,GAAG,CAAC,EAAD,KAAQ;AAChD,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,KAAT,GAAiB,OAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACC,cAAN,GADiC,CAEjC;;AACA,QAAI,CAACR,QAAD,IAAa,CAACE,QAAlB,EAA4B;AAC1BJ,MAAAA,KAAK,CAAC,iDAAD,EAAoD,SAApD,CAAL;AACA,aAAO,KAAP;AACD,KANgC,CAQjC;;;AACA,QAAIW,SAAS,GAAGL,QAAQ,CAACM,cAAT,CAAwB,WAAxB,CAAhB;AACAD,IAAAA,SAAS,CAACE,YAAV,CAAuB,UAAvB,EAAmC,UAAnC;AACAF,IAAAA,SAAS,CAACG,SAAV,CAAoBC,GAApB,CAAwB,SAAxB,EAXiC,CAajC;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACC,IAAJ,CAAS,cAAT,EAAyB;AAAEhB,QAAAA,QAAF;AAAYE,QAAAA;AAAZ,OAAzB,CAAvB;AAEA,YAAM;AAAEe,QAAAA;AAAF,UAAWH,QAAjB;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAA,MAAAA,IAAI,CAACG,UAAL,GAAkB,IAAIC,IAAJ,EAAlB;AAEAC,MAAAA,QAAQ,CAACC,WAAW,CAACC,KAAZ,CAAkBC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAlB,CAAD,CAAR,CARE,CAUF;;AACAU,MAAAA,MAAM,CAACC,QAAP,GAAkB,YAAlB;AACD,KAZD,CAYE,OAAOC,KAAP,EAAc;AACd/B,MAAAA,KAAK,CACH,6EADG,EAEH,SAFG,CAAL;AAKAW,MAAAA,SAAS,CAACG,SAAV,CAAoBkB,MAApB,CAA2B,SAA3B;AACArB,MAAAA,SAAS,CAACsB,eAAV,CAA0B,UAA1B;AACD;AACF;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAIE;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,UAAU,EAAE;AAAd,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAC6C,GAD7C,EAEE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,CAJF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAHF,EAiBE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFF,CADF,EAME,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEhC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBE,MAAAA,QAAQ,EAAE,EAA1B;AAA8B+B,MAAAA,KAAK,EAAE;AAArC,KADjB;AAEE,IAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAACA,MAAD,EAASC,YAAT,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,MAAC,KAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAAClC,QADhB;AAEE,IAAA,QAAQ,EAAEmC,YAFZ;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAPJ,CANF,CAjBF,CADF;AAgDD,CA7FD;;AA+FA,eAAepC,QAAf","sourcesContent":["import {\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n} from \"@chakra-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Formik } from \"formik\";\n\nimport Toast from \"./../../components/Toast\";\n\n// import logo from \"./../assets/image/logo.png\";\n\ninterface RegisterProps {}\n\nconst Register: React.FC<RegisterProps> = ({}) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    document.title = \"Login\";\n  }, []);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    //Verificar se todos o campos estão preenchidos antes da primeira requisição.\n    if (!username || !password) {\n      Toast(\"Que vacilo! Você não preencheu todos os campos.\", \"warning\");\n      return false;\n    }\n\n    //Bloquear o botão de login para evitar requisições desnecessárias.\n    let btn_login = document.getElementById(\"btn_login\");\n    btn_login.setAttribute(\"disabled\", \"disabled\");\n    btn_login.classList.add(\"waiting\");\n\n    //Tentar realizar a requisição.\n    try {\n      const response = await api.post(\"/users/login\", { username, password });\n\n      const { data } = response;\n\n      console.log(data);\n      data.login_date = new Date();\n\n      dispatch(UserActions.login(JSON.stringify(data)));\n\n      //TODO, método de redirecionamento vannila não fica legal :(\n      window.location = \"/Dashboard\";\n    } catch (error) {\n      Toast(\n        \"Vacilou na senha ou usuario, verifique se suas credenciais estão corretas..\",\n        \"warning\"\n      );\n\n      btn_login.classList.remove(\"waiting\");\n      btn_login.removeAttribute(\"disabled\");\n    }\n  }\n\n  return (\n    <div className=\"login-content\">\n      <div className=\"login-background\"></div>\n      <div className=\"login-background-2\"></div>\n      <div className=\"app-logo\">\n        <div className=\"text-intro\">\n          <h1 style={{ fontWeight: \"bold\" }}>\n            Rede social apenas para os vacilões.\n          </h1>\n          <h2 style={{ fontWeight: \"lighter\" }}>\n            Se você nunca vacilou, nem crie uma conta.{\" \"}\n            <span className=\"text-tiny\">Mas sabemos que já :)</span>\n          </h2>\n        </div>\n        <div className=\"logo-div\">\n          {/* <img src={logo} alt=\"Logo\" className=\"logo-img\" /> */}\n        </div>\n      </div>\n      <div className=\"form-container\">\n        <div className=\"login-welcome\">\n          <h1 className=\"login-title\">Registrar</h1>\n          <p>Favor inserir seus dados de registro.</p>\n        </div>\n\n        <Formik\n          initialValues={{ username: \"\", password: \"\", email: \"\" }}\n          onSubmit={(values) => {\n            console.log(values);\n          }}\n        >\n          {(values, handleChange) => (\n            <Form>\n              <FormControl>\n                <FormLabel htmlFor=\"username\">Nome de Usuário</FormLabel>\n                <Input\n                  value={values.username}\n                  onChange={handleChange}\n                  id=\"username\"\n                  placeholder=\"username\"\n                />\n                {/* <FormErrorMessage>{form.errors.name}</FormErrorMessage> */}\n              </FormControl>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}