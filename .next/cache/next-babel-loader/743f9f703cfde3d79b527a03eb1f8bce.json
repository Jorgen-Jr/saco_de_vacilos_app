{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/jorge-n/Documentos/workspace-react/saco_de_vacilos/frontend/src/components/Form/FormInput.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { FormControl, FormLabel, Input, FormErrorMessage, Textarea } from \"@chakra-ui/core\";\nexport const FormInput = (_ref) => {\n  _s();\n\n  let {\n    label,\n    textarea,\n    size: _\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\", \"textarea\", \"size\"]);\n\n  let InputOrTextarea = Input;\n\n  if (textarea) {\n    InputOrTextarea = Textarea;\n  }\n\n  const [field, {\n    error\n  }] = useField(props);\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, label), __jsx(InputOrTextarea, _extends({}, field, props, {\n    id: field.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  })), error ? __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }\n  }, error) : null);\n};\n\n_s(FormInput, \"DpPuTb9nPdu6NyyZR63Xu5KSrwc=\", false, function () {\n  return [useField];\n});\n\n_c = FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["/home/jorge-n/Documentos/workspace-react/saco_de_vacilos/frontend/src/components/Form/FormInput.tsx"],"names":["React","useField","FormControl","FormLabel","Input","FormErrorMessage","Textarea","FormInput","label","textarea","size","_","props","InputOrTextarea","field","error","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,gBAJF,EAKEC,QALF,QAMO,iBANP;AAcA,OAAO,MAAMC,SAAoC,GAAG,UAK9C;AAAA;;AAAA,MAL+C;AACnDC,IAAAA,KADmD;AAEnDC,IAAAA,QAFmD;AAGnDC,IAAAA,IAAI,EAAEC;AAH6C,GAK/C;AAAA,MADDC,KACC;;AACJ,MAAIC,eAAe,GAAGT,KAAtB;;AACA,MAAIK,QAAJ,EAAc;AACZI,IAAAA,eAAe,GAAGP,QAAlB;AACD;;AACD,QAAM,CAACQ,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,IAAqBd,QAAQ,CAACW,KAAD,CAAnC;AACA,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACG,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCR,KAAjC,CADF,EAEE,MAAC,eAAD,eAAqBM,KAArB,EAAgCF,KAAhC;AAAuC,IAAA,EAAE,EAAEE,KAAK,CAACE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGD,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAH1D,CADF;AAOD,CAlBM;;GAAMR,S;UAUgBN,Q;;;KAVhBM,S","sourcesContent":["import React, { InputHTMLAttributes } from \"react\";\nimport { useField } from \"formik\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Textarea,\n} from \"@chakra-ui/core\";\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n  label: string;\n  name: string;\n  textarea?: boolean;\n};\n\nexport const FormInput: React.FC<InputFieldProps> = ({\n  label,\n  textarea,\n  size: _,\n  ...props\n}) => {\n  let InputOrTextarea = Input;\n  if (textarea) {\n    InputOrTextarea = Textarea;\n  }\n  const [field, { error }] = useField(props);\n  return (\n    <FormControl isInvalid={!!error}>\n      <FormLabel htmlFor={field.name}>{label}</FormLabel>\n      <InputOrTextarea {...field} {...props} id={field.name} />\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}