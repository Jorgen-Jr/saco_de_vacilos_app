{"ast":null,"code":"var _jsxFileName = \"/home/jorge-n/Documentos/workspace-react/saco_de_vacilos/frontend/src/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ThemeProvider, CSSReset, useColorMode } from \"@chakra-ui/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./../components/Toast/style.css\";\nimport \"./../pages/Register/style.css\";\nimport theme from \"../theme\";\nimport { createClient, Provider } from \"urql\";\nconst client = createClient({\n  url: \"http://localhost:2001/graphql\"\n});\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  return __jsx(Provider, {\n    value: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(CSSReset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/jorge-n/Documentos/workspace-react/saco_de_vacilos/frontend/src/pages/_app.tsx"],"names":["ThemeProvider","CSSReset","useColorMode","theme","createClient","Provider","client","url","MyApp","Component","pageProps","colorMode","toggleColorMode"],"mappings":";;;;;;AAAA,SACEA,aADF,EAEEC,QAFF,EAIEC,YAJF,QAMO,iBANP;AAOA,OAAO,uCAAP;AACA,OAAO,iCAAP;AACA,OAAO,+BAAP;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,MAAvC;AAEA,MAAMC,MAAM,GAAGF,YAAY,CAAC;AAAEG,EAAAA,GAAG,EAAE;AAAP,CAAD,CAA3B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCV,YAAY,EAAnD;AAEA,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEI,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEH,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,SAAD,eAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,CADF,CADF;AAaD;;AAED,eAAeF,KAAf","sourcesContent":["import {\n  ThemeProvider,\n  CSSReset,\n  ColorModeProvider,\n  useColorMode,\n  Button,\n} from \"@chakra-ui/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./../components/Toast/style.css\";\nimport \"./../pages/Register/style.css\";\n\nimport theme from \"../theme\";\nimport { createClient, Provider } from \"urql\";\n\nconst client = createClient({ url: \"http://localhost:2001/graphql\" });\n\nfunction MyApp({ Component, pageProps }) {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Provider value={client}>\n      <ThemeProvider theme={theme}>\n        {/* <ColorModeProvider>\n          <Button onClick={toggleColorMode}>\n            Toogle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\n          </Button> */}\n        <CSSReset />\n        <Component {...pageProps} />\n        {/* </ColorModeProvider> */}\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}