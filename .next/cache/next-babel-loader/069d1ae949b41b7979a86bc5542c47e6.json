{"ast":null,"code":"var _jsxFileName = \"/home/jorge-n/Documentos/workspace-react/saco_de_vacilos/frontend/src/pages/Register/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, FormControl } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport HomeLayout from \"../../components/HomeLayout\";\nimport { FormInput } from \"../../components/Form/FormInput\";\nimport { useRegisterMutation } from \"../../generated/graphql\";\nimport { toErrorMap } from \"../../util/toErrorMap\"; // import logo from \"./../assets/image/logo.png\";\n\nconst Register = ({}) => {\n  _s();\n\n  const [, register] = useRegisterMutation();\n  return __jsx(HomeLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      name: \"\"\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data;\n\n      console.log({\n        username: values.username,\n        password: values.password,\n        email: values.email,\n        name: values.name\n      });\n      const response = await register({\n        username: values.username,\n        password: values.password,\n        email: values.email,\n        name: values.name\n      });\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.register.errors) {\n        console.log(toErrorMap(response.data.register.errors));\n        setErrors(toErrorMap(response.data.register.errors));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(FormInput, {\n    name: \"Nome\",\n    placeholder: \"Nome\",\n    label: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }), __jsx(FormInput, {\n    name: \"email\",\n    placeholder: \"E-mail\",\n    label: \"E-mail\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), __jsx(FormInput, {\n    name: \"username\",\n    placeholder: \"Nome de Usu\\xE1rio\",\n    label: \"Nome de Usu\\xE1rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), __jsx(FormInput, {\n    name: \"password\",\n    placeholder: \"Senha\",\n    label: \"Senha\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    type: \"submit\",\n    isLoading: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Cadastrar\"))));\n};\n\n_s(Register, \"mYy7lIdnWBmFP2V+FDbrcK/cEwQ=\", false, function () {\n  return [useRegisterMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/jorge-n/Documentos/workspace-react/saco_de_vacilos/frontend/src/pages/Register/index.tsx"],"names":["Button","FormControl","Form","Formik","HomeLayout","FormInput","useRegisterMutation","toErrorMap","Register","register","username","password","email","name","values","setErrors","console","log","response","data","errors","isSubmitting"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,iBAApC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AAGA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AAEA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CAEA;;AAGA,MAAMC,QAAiC,GAAG,CAAC,EAAD,KAAQ;AAAA;;AAChD,QAAM,GAAGC,QAAH,IAAeH,mBAAmB,EAAxC;AAEA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEI,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE,EAA1B;AAA8BC,MAAAA,KAAK,EAAE,EAArC;AAAyCC,MAAAA,IAAI,EAAE;AAA/C,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AAAA;;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAY;AACVP,QAAAA,QAAQ,EAAEI,MAAM,CAACJ,QADP;AAEVC,QAAAA,QAAQ,EAAEG,MAAM,CAACH,QAFP;AAGVC,QAAAA,KAAK,EAAEE,MAAM,CAACF,KAHJ;AAIVC,QAAAA,IAAI,EAAEC,MAAM,CAACD;AAJH,OAAZ;AAOA,YAAMK,QAAQ,GAAG,MAAMT,QAAQ,CAAC;AAC9BC,QAAAA,QAAQ,EAAEI,MAAM,CAACJ,QADa;AAE9BC,QAAAA,QAAQ,EAAEG,MAAM,CAACH,QAFa;AAG9BC,QAAAA,KAAK,EAAEE,MAAM,CAACF,KAHgB;AAI9BC,QAAAA,IAAI,EAAEC,MAAM,CAACD;AAJiB,OAAD,CAA/B;;AAOA,4BAAIK,QAAQ,CAACC,IAAb,mDAAI,eAAeV,QAAf,CAAwBW,MAA5B,EAAoC;AAClCJ,QAAAA,OAAO,CAACC,GAAR,CAAYV,UAAU,CAACW,QAAQ,CAACC,IAAT,CAAcV,QAAd,CAAuBW,MAAxB,CAAtB;AACAL,QAAAA,SAAS,CAACR,UAAU,CAACW,QAAQ,CAACC,IAAT,CAAcV,QAAd,CAAuBW,MAAxB,CAAX,CAAT;AACD;AACF,KArBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuBG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,WAAW,EAAC,MAAnC;AAA0C,IAAA,KAAK,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,QAFd;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,MAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,oBAFd;AAGE,IAAA,KAAK,EAAC,oBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAaE,MAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EAsBE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEA,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtBF,CAxBJ,CADF,CADF;AAwDD,CA3DD;;GAAMb,Q;UACiBF,mB;;;KADjBE,Q;AA6DN,eAAeA,QAAf","sourcesContent":["import { Button, FormControl } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\n\nimport Toast from \"./../../components/Toast\";\nimport HomeLayout from \"../../components/HomeLayout\";\nimport { FormInput } from \"../../components/Form/FormInput\";\nimport { useMutation } from \"urql\";\nimport { useRegisterMutation } from \"../../generated/graphql\";\nimport { toErrorMap } from \"../../util/toErrorMap\";\n\n// import logo from \"./../assets/image/logo.png\";\n\ninterface RegisterProps {}\nconst Register: React.FC<RegisterProps> = ({}) => {\n  const [, register] = useRegisterMutation();\n\n  return (\n    <HomeLayout>\n      <Formik\n        initialValues={{ username: \"\", password: \"\", email: \"\", name: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          console.log({\n            username: values.username,\n            password: values.password,\n            email: values.email,\n            name: values.name,\n          });\n\n          const response = await register({\n            username: values.username,\n            password: values.password,\n            email: values.email,\n            name: values.name,\n          });\n\n          if (response.data?.register.errors) {\n            console.log(toErrorMap(response.data.register.errors));\n            setErrors(toErrorMap(response.data.register.errors));\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <FormControl>\n              <FormInput name=\"Nome\" placeholder=\"Nome\" label=\"Nome\" />\n              <FormInput\n                name=\"email\"\n                placeholder=\"E-mail\"\n                label=\"E-mail\"\n                type=\"email\"\n              />\n              <FormInput\n                name=\"username\"\n                placeholder=\"Nome de Usuário\"\n                label=\"Nome de Usuário\"\n              />\n              <FormInput\n                name=\"password\"\n                placeholder=\"Senha\"\n                label=\"Senha\"\n                type=\"password\"\n              />\n            </FormControl>\n\n            <Button type=\"submit\" isLoading={isSubmitting}>\n              Cadastrar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </HomeLayout>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}